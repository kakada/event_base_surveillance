#content
  .flex-row-vertical-center{style: 'flex-wrap: wrap'}
    %form#event-form.form-inline.justify-content-start.flex-grow-1{ method: :get }
      .form-group.mb-2
        %label.mr-1{ for: :event_event_type }= "#{t('map.event')}:"
        = select_tag 'event_type_id', options_for_select(select_options(current_user, @event_types), params[:event_type_id]), include_blank: t('map.all'), class: 'form-control'

      .form-group.mb-2
        = render 'events/index/filter_date'

      %button.btn.btn-primary.mb-2{ type: 'submit' }
        %i.fas.fa-search
        = t('shared.apply')

    .mb-2
      %span= t('map.title', total_count: @event_data.inject(0){|sum,e| sum + e[:total_count] }, location_count: @event_data.size).html_safe

  #map{ data: {'event-data' => @event_data.to_json, province: current_user.location.try(:to_json), program: current_program.to_json }}

  - if @event_data.present?
    .slide-wrapper.flex-row
      .flex-row.align-items-end
        .btn-slide.flex-column.pointer.align-items-center
          %i.fas.fa-angle-double-left.fa-angle-double-right
          .vericaltext= t('map.legend')

      .legend.flex-column
        %strong= t('event.suspected_event_type')

        .flex1.overflow-auto
          - @event_data.uniq{ |ed| ed[:event_type] }.each do |data|
            .flex-row-vertical-center.pt-1.pb-1
              %i{style:"background: #{data[:event_type].color}"}
              .ellipsis= data[:event_type].name

              - if shared_event?(current_user, data[:event_type])
                .pl-1.pr-1{ 'data-toggle' => 'tooltip', title: "#{t('map.shared_from')}: #{data[:event_type].program_name}"}
                  = image_tag 'share.png', class: 'icon-share'

  - else
    .no-data.text-center
      %span= t('shared.no_result_found')

:javascript
  locale = {
    suspected_event: "#{t('map.suspected_event')}",
    location: "#{t('map.location')}",
    reported_count: "#{t('map.reported_count')}",
    total_case: "#{t('map.total_case')}",
    total_hospitalized: "#{t('map.total_hospitalized')}",
    total_death: "#{t('map.total_death')}",
    times: "#{t('map.times')}"
  }
