/ Follow up button
.follow-up{ class: ('d-none' unless event.follow_ups.present?), id: event.id }
  - if event.follow_ups.present?
    = render 'events/index/follow_up', event: event

/ Other Buttons
%button.btn{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :type => "button"}
  %i.fas.fa-ellipsis-v

.dropdown-menu.dropdown-menu-right
  = link_to new_event_follow_up_path(event), class: ['btn dropdown-item', ('disabled' if event.locked?)], remote: true do
    %i.fas.fa-bell.drop-menu-icon
    %span= t('event.follow_up')

  = link_to event.guideline_url, class: "btn dropdown-item #{'disabled' unless event.guideline_url.present?}", target: '_blank' do
    %i.fas.fa-download.drop-menu-icon
    %span= t('event.download_guideline')

  = link_to event_preview_path(event, format: 'pdf'), class: 'btn dropdown-item', target: '_blank' do
    %i.fas.fa-eye.drop-menu-icon
    %span= t('event.preview_pdf')

  - if policy(event).unlock?
    = link_to unlock_event_path(event), method: :put, class: ['btn dropdown-item'] do
      %i.fas.fa-unlock-alt.drop-menu-icon
      %span= t('shared.unlock')

  - if policy(event).update?
    = link_to edit_event_path(event), class: ['btn dropdown-item', ('disabled' unless policy(event).update?)] do
      %i.fas.fa-pen.drop-menu-icon
      %span= t('shared.edit')

  - if policy(event).destroy?
    = link_to event_path(event), method: :delete, data: { confirm: t('event.are_you_sure', event_uuid: event.uuid) }, class: ['btn dropdown-item'] do
      %i.fa.fa-trash.drop-menu-icon
      %span= t('shared.delete')
