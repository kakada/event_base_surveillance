%form.filter-form{ action: '/events', method: 'get' }
  = hidden_field_tag :filter, params[:filter]

  .form-row.medium-width
    .form-group
      = text_field_tag(:uuid, params[:uuid], class: 'form-control filter-input keyword', placeholder: t('event.id'))

    = render 'events/index/filter_date'

    %div
      .btn-search-wrapper.d-block.d-md-flex
        %a.btn.btn-outline-secondary.advance-search{"aria-controls" => "collapseExample", "aria-expanded" => "false", "data-toggle" => "collapse", :href => "#collapseExample", :role => "button"}
          %span.d-none.d-lg-inline= t('event.advance_search')
          %i.fas.fa-angle-down

        %button.btn.btn-primary.ml-md-2{type: :submit}
          %i.fas.fa-search
          %span.d-none.d-lg-inline= t('event.search')

    - if policy(Event).download?
      .flex1.btn-download-csv.mb-2
        %button.btn.btn-outline-info{"data-target" => "#template-model", "data-toggle" => "modal", :type => "button"}
          %i.fas.fa-download
          = t('event.download_csv')

      = render 'events/index/modal_download'

  / Advance filter
  #collapseExample.collapse.show
    .d-lg-flex.mb-3
      = render 'events/index/filter_province'
      = render 'events/index/filter_event_type'
      = render 'events/index/filter_risk_level'
      = render 'events/index/filter_progress'
      = render 'events/index/filter_source_of_information'

:javascript
  params = {
    keyword: "#{params[:keyword]}",
    start_date: "#{params[:start_date]}"
  }
