version: '3'

volumes:
  db:
  bundle:
  elastic:
  certs:

services:
  db:
    image: postgres
    volumes:
      - db:/var/lib/postgresql/data

  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - app

  app: &rails
    image: ilabsea/event_base_surveillance:0.1
    restart: unless-stopped
    volumes:
      - bundle:/usr/local/bundle
      - certs:$CERTS_DIR
      - ./vendor/assets/fonts:/usr/share/fonts
    depends_on:
      - db
      - redis
      - elasticsearch
    environment:
      - LANG=C.UTF-8
      - DATABASE_URL=postgres://postgres@db/ebs_production
      - RAILS_SERVE_STATIC_FILES=true
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=https://elasticsearch:9200
      - ELASTICSEARCH_REQUEST_TIMEOUT=300 #seconds
      - ELASTIC_USER=elastic
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - ELASTIC_COMPRESSION=true
      - ELASTIC_CA_FILE=$CERTS_DIR/ca/ca.crt
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - SETTINGS__SMTP__ADDRESS=smtp.mandrillapp.com
      - SETTINGS__SMTP__DOMAIN=domain
      - SETTINGS__SMTP__USER_NAME=email
      - SETTINGS__SMTP__PASSWORD=api-key
      - SETTINGS__SMTP__HOST=localhost:3000
      - SETTINGS__SMTP__DEFAULT_FROM=notifications@example.com
      - TELEGRAM_TOKEN=your_token
      - TELEGRAM_USERNAME=your_bot_name
      - ENABLE_EVENT_WORKER=true
      - VIRTUAL_HOST=example.com
      - VIRTUAL_PORT=80
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: '5'
    command:
    - /bin/sh
    - -c
    - bundle exec puma -e production -b tcp://0.0.0.0:80

  sidekiq:
    <<: *rails
    command: bundle exec sidekiq -C config/sidekiq.yml
    ports: []

  redis:
    container_name: redis
    image: redis

  elasticsearch:
    image: elasticsearch:7.4.1
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=$CERTS_DIR/es01/es01.key
      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.http.ssl.certificate=$CERTS_DIR/es01/es01.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/es01/es01.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/es01/es01.key
    volumes:
      - elastic:/usr/share/elasticsearch/data
      - certs:$CERTS_DIR
    healthcheck:
      test: curl --cacert $CERTS_DIR/ca/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - 9200:9200
